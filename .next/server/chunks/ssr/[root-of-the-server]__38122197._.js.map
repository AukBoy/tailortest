{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient, type CookieOptions } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport function createClient() {\n  const cookieStore = cookies()\n\n  // Create a supabase client on the server with project's credentials\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          try {\n            cookieStore.set({ name, value, ...options })\n          } catch (error) {\n            // The `set` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n        remove(name: string, options: CookieOptions) {\n          try {\n            cookieStore.set({ name, value: '', ...options })\n          } catch (error) {\n            // The `delete` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,SAAS;IACd,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAE1B,oEAAoE;IACpE,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;gBACd,uDAAuD;gBACvD,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;gBACd,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// This file is a central place for all server actions.\n'use server'\n\nimport { createClient } from '@/lib/supabase/server'\nimport { headers } from 'next/headers'\nimport { redirect } from 'next/navigation'\nimport { z } from 'zod';\nimport { type Customer, type MeasurementSet, type OrderStatus, type PaymentStatus } from '@/lib/types';\nimport { revalidatePath } from 'next/cache';\n\nconst loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(6),\n});\n\nconst signupSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(6),\n});\n\nexport async function login(formData: FormData) {\n  const supabase = createClient()\n  const validatedFields = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!validatedFields.success) {\n    return { error: 'Invalid fields' };\n  }\n  \n  const { email, password } = validatedFields.data;\n\n  const { error } = await supabase.auth.signInWithPassword({\n    email,\n    password,\n  })\n\n  if (error) {\n    return { error: error.message };\n  }\n\n  return redirect('/dashboard');\n}\n\nexport async function signup(formData: FormData) {\n  const origin = headers().get('origin')\n  const supabase = createClient()\n  const validatedFields = signupSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!validatedFields.success) {\n    return { error: 'Invalid fields' };\n  }\n\n  const { email, password } = validatedFields.data;\n\n  const { error } = await supabase.auth.signUp({\n    email,\n    password,\n    options: {\n      emailRedirectTo: `${origin}/auth/callback`,\n    },\n  })\n\n  if (error) {\n    return { error: error.message };\n  }\n\n  // For this app, we'll just log them in directly after sign up.\n  // In a real app, you'd likely want email confirmation.\n  const { error: signInError } = await supabase.auth.signInWithPassword({ email, password });\n\n  if (signInError) {\n    return { error: signInError.message };\n  }\n\n  return redirect('/dashboard');\n}\n\nexport async function logout() {\n  const supabase = createClient();\n  await supabase.auth.signOut();\n  return redirect('/login');\n}\n\n// Customer Actions\nconst customerFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\n  nic: z.string().min(5, \"NIC must be at least 5 characters.\"),\n  contact: z.string().min(5, \"Contact information is required.\"),\n  orderHistory: z.string().optional(),\n  preferences: z.string().optional(),\n});\n\nexport async function createCustomer(formData: FormData) {\n    const supabase = createClient();\n    const validatedFields = customerFormSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!validatedFields.success) {\n        return { error: 'Invalid fields', fields: validatedFields.error.flatten().fieldErrors };\n    }\n\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) return { error: 'You must be logged in to create a customer.' };\n\n    const { error, data } = await supabase.from('customers').insert({\n        ...validatedFields.data,\n        user_id: user.id\n    }).select('id').single();\n\n    if (error) {\n        return { error: 'Failed to create customer.' };\n    }\n    \n    revalidatePath('/dashboard');\n    return redirect(`/dashboard/customer/${data.id}`);\n}\n\nexport async function updateCustomer(customerId: string, formData: FormData) {\n    const supabase = createClient();\n    const validatedFields = customerFormSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!validatedFields.success) {\n        return { error: 'Invalid fields', fields: validatedFields.error.flatten().fieldErrors };\n    }\n    \n    const { error } = await supabase\n        .from('customers')\n        .update(validatedFields.data)\n        .eq('id', customerId);\n\n    if (error) {\n        return { error: 'Failed to update customer.' };\n    }\n\n    revalidatePath('/dashboard');\n    revalidatePath(`/dashboard/customer/${customerId}`);\n    return { success: true };\n}\n\nexport async function deleteCustomer(customerId: string) {\n    const supabase = createClient();\n    const { error } = await supabase.from('customers').delete().eq('id', customerId);\n\n    if (error) {\n        return { error: 'Failed to delete customer.' };\n    }\n\n    revalidatePath('/dashboard');\n    return redirect('/dashboard');\n}\n\n\n// Measurement Actions\nexport async function addMeasurementSet(customerId: string, measurementSet: Omit<MeasurementSet, 'id' | 'date'>) {\n    const supabase = createClient();\n\n    const { error } = await supabase.from('measurement_sets').insert({\n        customer_id: customerId,\n        date: new Date().toISOString(),\n        measurements: measurementSet.measurements,\n        job_number: measurementSet.jobNumber,\n        request_date: measurementSet.requestDate,\n        payment_status: measurementSet.paymentStatus,\n        order_status: measurementSet.orderStatus,\n    });\n\n    if (error) {\n        console.error('Supabase error:', error);\n        return { error: 'Failed to add measurement set.' };\n    }\n    \n    revalidatePath(`/dashboard/customer/${customerId}`);\n    return { success: true };\n}\n\nexport async function updateOrderStatus(setId: string, customerId: string, newStatus: OrderStatus) {\n    const supabase = createClient();\n\n    const updateData: { order_status: OrderStatus; completion_date?: string; handover_date?: string } = {\n        order_status: newStatus\n    };\n    if (newStatus === 'Completed') {\n        updateData.completion_date = new Date().toISOString();\n    } else if (newStatus === 'Handed Over') {\n        updateData.handover_date = new Date().toISOString();\n    }\n\n    const { error } = await supabase.from('measurement_sets').update(updateData).eq('id', setId);\n\n    if (error) {\n        return { error: 'Failed to update order status.' };\n    }\n\n    revalidatePath(`/dashboard/customer/${customerId}`);\n    return { success: true };\n}\n\n\nexport async function updatePaymentStatus(setId: string, customerId: string, newStatus: PaymentStatus) {\n    const supabase = createClient();\n\n    const { error } = await supabase.from('measurement_sets').update({ payment_status: newStatus }).eq('id', setId);\n\n    if (error) {\n        return { error: 'Failed to update payment status.' };\n    }\n\n    revalidatePath(`/dashboard/customer/${customerId}`);\n    return { success: true };\n}\n\n\n// Data Fetching\nexport async function getCustomers() {\n    const supabase = createClient();\n    const { data, error } = await supabase\n        .from('customers')\n        .select(`*, measurement_sets(job_number, order_status)`)\n        .order('created_at', { ascending: false });\n    \n    if (error) {\n        console.error(error);\n        return [];\n    }\n\n    // This is a bit of a hack to match the previous data structure for the search to work.\n    return data.map(c => ({\n        ...c,\n        measurementSets: c.measurement_sets\n    })) as Customer[];\n}\n\nexport async function getCustomerById(id: string): Promise<Customer | null> {\n    const supabase = createClient();\n    const { data, error } = await supabase\n        .from('customers')\n        .select(`\n            *,\n            measurement_sets (\n                id,\n                date,\n                measurements,\n                job_number,\n                request_date,\n                payment_status,\n                order_status,\n                completion_date,\n                handover_date\n            )\n        `)\n        .eq('id', id)\n        .single();\n\n    if (error) {\n        console.error(error);\n        return null;\n    }\n\n    if (!data) {\n        return null;\n    }\n\n    const customer: Customer = {\n      id: data.id,\n      createdAt: data.created_at,\n      name: data.name,\n      nic: data.nic,\n      contact: data.contact,\n      orderHistory: data.order_history || '',\n      preferences: data.preferences || '',\n      measurementSets: data.measurement_sets.map(ms => ({\n        id: ms.id,\n        date: ms.date,\n        measurements: ms.measurements as any,\n        jobNumber: ms.job_number || undefined,\n        requestDate: ms.request_date || undefined,\n        paymentStatus: ms.payment_status as PaymentStatus,\n        orderStatus: ms.order_status as OrderStatus,\n        completionDate: ms.completion_date || undefined,\n        handoverDate: ms.handover_date || undefined,\n      }))\n    }\n    \n    return customer;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {login as '407216caea32a4312dab3fa0050f27789b4bca87c5'} from 'ACTIONS_MODULE0'\nexport {signup as '40d152fccd18fdfdca564676794c937aeeb90bfc6a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/login-form.tsx <module evaluation>\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+DACA","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/login-form.tsx\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2CACA","debugId":null}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/page.tsx"],"sourcesContent":["import { LoginForm } from '@/components/login-form'\nimport { Card } from '@/components/ui/card'\nimport { createClient } from '@/lib/supabase/server'\nimport { redirect } from 'next/navigation'\n\nexport default async function LoginPage() {\n  const supabase = createClient()\n\n  const {\n    data: { user },\n  } = await supabase.auth.getUser()\n\n  if (user) {\n    return redirect('/dashboard')\n  }\n  \n  return (\n    <main className=\"flex min-h-screen flex-col items-center justify-center bg-background p-4 sm:p-8\">\n      <div className=\"w-full max-w-md\">\n        <div className=\"text-center mb-8\">\n            <h1 className=\"text-5xl font-headline font-bold text-primary\">Style Gallery</h1>\n            <p className=\"text-muted-foreground mt-2 font-body\">Your Personal Style Companion</p>\n        </div>\n        <Card className=\"shadow-lg\">\n            <LoginForm />\n        </Card>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAAA;;;;;;AAEe,eAAe;IAC5B,MAAM,WAAW,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;IAE5B,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAE/B,IAAI,MAAM;QACR,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAClB;IAEA,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAAgD;;;;;;sCAC9D,8OAAC;4BAAE,WAAU;sCAAuC;;;;;;;;;;;;8BAExD,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAU;8BACZ,cAAA,8OAAC,mIAAA,CAAA,YAAS;;;;;;;;;;;;;;;;;;;;;AAKtB","debugId":null}}]
}